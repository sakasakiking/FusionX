<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="SimpleButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{TemplateBinding Content}"
                               TextWrapping="Wrap"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBrushDarker}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimpleFilledButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Height="28" CornerRadius="14" Padding="12,0,12,0"
                            Background="{DynamicResource ControlHoverBackgroundBrush}">
                        <TextBlock FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding Content}"
                           TextWrapping="Wrap"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlSelectedBackgroundBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SelectedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimpleFilledRoundButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Height="28" CornerRadius="14" Width="28"
                        Background="{DynamicResource ControlHoverBackgroundBrush}">
                        <TextBlock FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding Content}"
                           TextWrapping="Wrap"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlSelectedBackgroundBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SelectedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LightFilledRoundButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlHoverBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse x:Name="Border" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                                Fill="{TemplateBinding Background}" Visibility="Visible">
                        </Ellipse>
                        <Ellipse x:Name="HoverBorder" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                                Fill="{DynamicResource ControlSelectedBackgroundBrush}" Visibility="Collapsed">
                        </Ellipse>
                        <TextBlock FontSize="{TemplateBinding FontSize}" FontFamily="Segoe Fluent Icons, Segoe MDL2 Assets" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="HoverBorder"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SelectedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridViewPlayButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Height="28" CornerRadius="14" Width="28"
                        Background="{DynamicResource ControlBackgroundBrush}">
                        <TextBlock FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding Content}"
                           TextWrapping="Wrap"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SelectedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LightFilled44Button" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Height="44" CornerRadius="22" Padding="12,0,12,0"
                            Background="{DynamicResource ControlHoverBackgroundBrush}">
                        <TextBlock FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding Content}"
                           TextWrapping="Wrap"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlSelectedBackgroundBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SelectedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>